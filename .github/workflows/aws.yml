name: Deploy na Instância EC2
on:
  workflow_run:
    workflows: ["Criar ou usar Instância EC2 com IP Elástico"]
    types:
      - completed

jobs:
  deploy-na-ec2:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout do repositório
      uses: actions/checkout@v2

    - name: Configurar AWS CLI
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-2

    - name: Verificar se a instância já existe
      id: checkinstance
      run: |
        existing_instance=$(aws ec2 describe-instances --filters "Name=tag:Name,Values=comentarios-app-instance" --query 'Reservations[].Instances[].[InstanceId]' --output text)
        if [ -z "$existing_instance" ]; then
          echo "::set-output name=instance_exists::false"
        else
          echo "::set-output name=instance_exists::true"
          echo "::set-output name=existing_instance_id::$existing_instance"
        fi

    - name: Criar e enviar arquivo tar para a instância EC2
      if: steps.checkinstance.outputs.instance_exists == 'true'
      run: |
        docker build -t meuapp .
        
        
        docker run --name meuapp-container meuapp tar -czf /tmp/artefatos.tar.gz -C /home/ubuntu .
        
        
        scp -i ${{ secrets.AWS_PEM }} /tmp/artefatos.tar.gz ubuntu@ec2-44-232-195-60.us-west-2.compute.amazonaws.com:/home/ubuntu

    - name: Extrair e implantar artefatos na instância EC2
      if: steps.checkinstance.outputs.instance_exists == 'true'
      run: |
        # Conectar-se à instância EC2
        ssh -i ${{ secrets.AWS_PEM }} ubuntu@ec2-44-232-195-60.us-west-2.compute.amazonaws.com "
          # Extrair os artefatos
          tar -xzf /home/ubuntu/artefatos.tar.gz -C /caminho/para/implantar
          
          # Comandos adicionais de implantação, se necessário
        "