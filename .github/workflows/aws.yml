name: Deploy na Instância EC2
on:
  workflow_run:
    workflows: ["Criar ou usar Instância EC2 com IP Elástico"]
    types:
      - completed

jobs:
  deploy-na-ec2:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout do repositório
      uses: actions/checkout@v2

    - name: Configurar AWS CLI
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-2

    - name: Verificar se a instância já existe
      id: checkinstance
      run: |
        existing_instance=$(aws ec2 describe-instances --filters "Name=tag:Name,Values=comentarios-app-instance" --query 'Reservations[].Instances[].[InstanceId]' --output text)
        if [ -z "$existing_instance" ]; then
          echo "::set-output name=instance_exists::false"
        else
          echo "::set-output name=instance_exists::true"
          echo "::set-output name=existing_instance_id::$existing_instance"
        fi

    
    - name: Salvar imagem Docker em um arquivo tar
      if: steps.checkinstance.outputs.instance_exists == 'true'
      run: |
        # Construir a imagem Docker
        docker build -t meuapp -f Docker/Dockerfile .
        
        # Salvar a imagem Docker em um arquivo tar
        docker save -o /tmp/meuapp.tar meuapp:latest

    - name: Debug - Listar arquivos na pasta /tmp
      run: |
        ls -la /tmp
    
    - name: Escrever chave privada em um arquivo temporário
      run: echo "${{ secrets.AWS_PEM }}" > chave.pem

    - name: Copiar arquivo tar para a instância EC2
      if: steps.checkinstance.outputs.instance_exists == 'true'
      run: |
        scp -i chave.pem /tmp/meuapp.tar ubuntu@ec2-44-232-195-60.us-west-2.compute.amazonaws.com:/home/ubuntu/



        

    - name: Extrair e implantar artefatos na instância EC2
      if: steps.checkinstance.outputs.instance_exists == 'true'
      run: |
        # Conectar-se à instância EC2
        ssh -i ${{ secrets.AWS_PEM }} ubuntu@ec2-44-232-195-60.us-west-2.compute.amazonaws.com "
          # Extrair os artefatos
          tar -xzf /home/ubuntu/meuapp.tar -C /caminho/para/implantar
          
          # Comandos adicionais de implantação, se necessário
          
          # Apagar a imagem Docker localmente após implantação bem-sucedida
          docker rmi meuapp:latest
        "
